#!/usr/bin/env bash

COMPOSE_VERSION='2.10.2'

##
# Acuparse Docker Compose Management Script
# @copyright Copyright (C) 2015-2024 Maxwell Power
# @author Maxwell Power <max@acuparse.com>
# @license MIT
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
##

function _usage() {
  printf "Usage: start / restart / stop / status / destroy / update / logs / console / dbconsole / update_compose\n"
  exit 0
}

function _start() {
  docker-compose -f /opt/acuparse/docker-compose.yml up -d
}

function _restart() {
  docker-compose -f /opt/acuparse/docker-compose.yml down
  docker-compose -f /opt/acuparse/docker-compose.yml up -d
}

function _stop() {
  docker-compose -f /opt/acuparse/docker-compose.yml down
}

function _destroy() {
  docker-compose -f /opt/acuparse/docker-compose.yml down -v
}

function _update() {
  curl https://gitlab.com/acuparse/installer/-/raw/master/docker/acuparse -o /usr/local/bin/acuparse
  curl https://gitlab.com/acuparse/installer/-/raw/master/docker/docker-compose.yml -o /opt/acuparse/docker-compose.yml
  chmod +x /usr/local/bin/acuparse
  docker-compose -f /opt/acuparse/docker-compose.yml pull
  docker-compose -f /opt/acuparse/docker-compose.yml up -d
  docker image prune -f
}

function _logs() {
  docker-compose -f /opt/acuparse/docker-compose.yml logs -f
}

function _acuparseConsole() {
  docker-compose -f /opt/acuparse/docker-compose.yml exec acuparse bash
}

function _dbConsole() {
  docker-compose -f /opt/acuparse/docker-compose.yml exec db bash
}

function _status() {
  docker-compose -f /opt/acuparse/docker-compose.yml top
}

function _updateCompose() {
  if [[ ("$DIST" == "debian") || ("$DIST" == "ubuntu") ]]; then
    curl -L "https://github.com/docker/compose/releases/download/v$COMPOSE_VERSION/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
  elif [[ ("$DIST" == "raspbian") ]]; then
    pip3 install docker-compose -q
  fi
  docker-compose -f /opt/acuparse/docker-compose.yml up -d
}

if [ "$1" == 'start' ]; then
  echo "Starting Acuparse ..."
  _start
elif [ "$1" == 'restart' ]; then
  echo "Restarting Acuparse ..."
  _restart
elif [ "$1" == 'stop' ]; then
  echo "Stopping Acuparse ..."
  _stop
elif [ "$1" == 'destroy' ]; then
  echo "Destroying Acuparse ..."
  _destroy
elif [ "$1" == 'update' ]; then
  if [ "$EUID" -ne 0 ]; then
    RED='\033[0;31m'
    GREEN='\033[0;32m'
    NC='\033[0m'
    printf "${RED}Update must be run as root!\n${NC}Retry with:\n${GREEN}sudo acuparse update${NC}\n"
    exit
  else
    echo "Updating Acuparse ..."
    _update
    echo "Run \"acuparse update_compose\" as root to update Docker Compose, if required."
  fi
elif [ "$1" == 'logs' ]; then
  echo "Loading Acuparse Logs ..."
  _logs
elif [ "$1" == 'console' ]; then
  echo "Starting Acuparse Console ..."
  _acuparseConsole
elif [ "$1" == 'dbconsole' ]; then
  echo "Starting Database Console ..."
  _dbConsole
elif [ "$1" == 'status' ]; then
  echo "Getting Service Status ..."
  _status
elif [ "$1" == 'update_compose' ]; then
  if [ "$EUID" -ne 0 ]; then
    RED='\033[0;31m'
    GREEN='\033[0;32m'
    NC='\033[0m'
    printf "${RED}Update must be run as root!\n${NC}Retry with:\n${GREEN}sudo acuparse update_compose${NC}\n"
    exit
  else
    echo "Updating Docker Compose ..."
    _updateCompose
  fi
else
  _usage
fi
